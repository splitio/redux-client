1.7.2 (April 3, 2023)
 - Updated linter dependencies and rules. The deprecated TSLint package was replaced by ESLint.
 - Updated some transitive dependencies for vulnerability fixes.
 - Updated @splitsoftware/splitio package to version 10.22.4 that includes minor improvements.
 - Bugfixing - Fixed error when using the SDK in localhost mode for testing with NodeJS test runners such as Jest (See https://help.split.io/hc/en-us/articles/360038851551-Redux-SDK#localhost-mode).

1.7.1 (November 15, 2022)
 - Updated React Redux peer dependency range to include React-redux@8.x.x and React@18.x.x.
 - Updated @splitsoftware/splitio dependency to version 10.22.2, which includes vulnerability and bug fixes.

1.7.0 (October 5, 2022)
 - Updated @splitsoftware/splitio dependency to version 10.22.0, which includes:
      - Added a new impressions mode for the SDK called NONE, to be used in factory when there is no desire to capture impressions on an SDK factory to feed Split's analytics engine. Running NONE mode, the SDK will only capture unique keys evaluated for a particular feature flag instead of full blown impressions.
      - Added `autoRequire` configuration option to the Google Analytics to Split integration, which takes care of requiring the splitTracker plugin on trackers dynamically created by Google tag managers (See https://help.split.io/hc/en-us/articles/360040838752#set-up-with-gtm-and-gtag.js).
      - Updated default value of `scheduler.featuresRefreshRate` config parameter from 30 seconds to 60 seconds.
      - Updated storage implementations to improve the performance of split evaluations (i.e., `getTreatment(s)` method calls) when using the default storage in memory.
      - Updated browser listener to push remaining impressions and events on 'visibilitychange' and 'pagehide' DOM events, instead of 'unload', which is not reliable in modern mobile and desktop Web browsers.
      - Updated the synchronization flow to be more reliable in the event of an edge case generating delay in cache purge propagation, keeping the SDK cache properly synced.
      - Updated some dependencies for vulnerability fixes.

1.6.0 (Jul 7, 2022)
 - Updated @splitsoftware/splitio dependency to version 10.20.0, which includes:
      - Added a new config option to control the tasks that listen or poll for updates on feature flags and segments, via the new config sync.enabled . Running online Split will always pull the most recent updates upon initialization, this only affects updates fetching on a running instance. Useful when a consistent session experience is a must or to save resources when updates are not being used.
      - Updated telemetry logic to track the anonymous config for user consent flag set to declined or unknown.
      - Updated submitters logic, to avoid duplicating the post of impressions to Split cloud when the SDK is destroyed while its periodic post of impressions is running.
      - Added `scheduler.telemetryRefreshRate` property to SDK configuration, and deprecated `scheduler.metricsRefreshRate` property.
      - Updated SDK telemetry storage, metrics and updater to be more effective and send less often.
      - Updated eventsource dependency range to ^1.1.2 to avoid a vulnerability and dependency resolution to a vulnerable version of url-parse transitive dependency.
      - Bugfixing - Updated submitters logic, to avoid dropping impressions and events that are being tracked while POST request is pending.

1.5.0 (April 20, 2022)
 - Updated @splitsoftware/splitio dependency to version 10.18.1, which includes:
      - Added user consent feature to allow delaying or disabling the data tracking from SDK until user consent is explicitly granted or declined. Read more in our docs.
      - Added `scheduler.impressionsQueueSize` property to SDK configuration to limit the amount of impressions tracked in memory. Read more in our docs.
      - Added support to SDK clients on browser to optionally bind attributes to the client, keeping these loaded within the SDK along with the user ID, for easier usage when requesting flag.
      - Updated format for MySegments keys in LocalStorage, keeping backwards compatibility (issue https://github.com/splitio/javascript-client/issues/638).
      - Updated dependencies for vulnerability fixes, general polishing, and bug fixes.

1.4.0 (September 29, 2021)
 - Updated @splitsoftware/splitio dependency to version 10.16.0, which includes:
      - Updated localhost mode to emit SDK_READY_FROM_CACHE event in Browser when using localStorage (issue https://github.com/splitio/react-client/issues/34).
      - Updated streaming logic to use the newest version of our streaming service, including:
            - Integration with Auth service V2, connecting to the new channels and applying the received connection delay.
            - Implemented handling of the new MySegmentsV2 notification types (SegmentRemoval, KeyList, Bounded and Unbounded)
            - New control notification for environment scoped streaming reset.
 - Updated Enzyme and Jest development dependencies to fix vulnerabilities.

1.3.2 (June 25, 2021)
 - Updated @splitsoftware/splitio dependency to version 10.15.8, which fixes some issues with localhost mode and includes other improvements.
 - Updated other NPM dependencies to fix vulnerabilities.
 - Updated ES modules build to target ES5.

1.3.1 (April 29, 2021)
 - Updated dependencies to fix vulnerabilities.
 - Updated Split's SDK dependency to fix vulnerabilities.

1.3.0 (December 9, 2020)
 - Added a new parameter to `getTreatments` actions creator: `evalOnReadyFromCache` to evaluate splits when the SDK_READY_FROM_CACHE event is emitted. Learn more in our Redux SDK documentation.
 - Updated how splits evaluations are handled on SDK_READY, SDK_READY_FROM_CACHE and SDK_UPDATE events, to dispatch a single action with evaluations that results in all treatments updates in the state at once, instead of having multiple actions that might lead to multiple store notifications.
 - Updated some NPM dependencies for vulnerability fixes.

1.2.1 (Oct 7, 2020)
 - Updated @splitsoftware/splitio dependency to version 10.15.0, which uses the optimized impressions sending and supports filtering the splits to be synced. Learn more in our javascript-client changelog or documentation.

1.2.0 (Jul 7, 2020)
 - Updated @splitsoftware/splitio dependency to version 10.13.0, which uses streaming synchronization by default, amongst other updates. Learn more in our javascript-client changelog or documentation.
 - Added a new status property to split's piece of state: `isReadyFromCache`, to indicate that the SDK is ready to evaluate when using LocalStorage cached data in browser.
 - Added an optional callback parameter to `initSplitSdk` action creator: `onReadyFromCache`, to listen when the SDK is ready to evaluate using LocalStorage cached data.
 - Added an optional callback parameter to `destroySplitSdk` action creator: `onDestroy`, to listen when the SDK has gracefully shut down.

1.1.0 (May 11, 2020)
 - Bugfixing - incorrect evaluation of splits on browser when using `getTreatments` with a different user key than the default, caused by not waiting the fetch of segments.
 - Added `destroySplitSdk` action creator to gracefully shutdown the SDK.
 - Added two new status properties to split's piece of state: `hasTimedout` and `isDestroyed` to better reflect the current state of the associated factory.

1.0.1 (April 6, 2020)
 - Updated dependencies to fix vulnerabilities
 - Bugfixing - support numbers as user keys

1.0.0 (January 24, 2020)
 - Initial public release!
